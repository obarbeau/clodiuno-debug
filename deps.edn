;; Clojure API for Arduino with debug mode
{:deps {cheshire/cheshire           {:mvn/version "5.11.0"}
        com.taoensso/timbre         {:mvn/version "5.2.1"}
        http-kit/http-kit           {:mvn/version "2.6.0"}
        io.aviso/pretty             {:mvn/version "1.1.1"}
        io.github.obarbeau/clodiuno {#_#_:git/sha "a9b0d7a82e8a6a2cbae8374cbddfe6bd0740ee3b"
                                     :local/root "../clodiuno"}
        org.clojure/clojure         {:mvn/version "1.11.1"}}
 :paths ["src" "resources"]
 :aliases
 {:build {:deps {io.github.obarbeau/build-clj
                 {#_#_:git/sha "bb7d3f12381d84b9e230d8497d4d09b9fd6971ab"
                  :local/root "../../tools/build-clj"}}
          :exec-args {:lib io.github.obarbeau/clodiuno-debug
                      :main-ns clodiuno.core
                      :version "0.0.4-SNAPSHOT"}}
  :usb-port {:jvm-opts ["-Dgnu.io.rxtx.SerialPorts=/dev/ttyACM0"
                        ;; gnu.io.CommPortIdentifier
                        ;; requires /usr/lib/jni/librxtxSerial-<version>.so
                        "-Djava.library.path=/usr/lib/jni"
                        "-Dgnu.io.log.mode=PRINT_MODE"]}
  ;; run tests & coverage with Kaocha:
  ;; cd $CLJ/electronics/clodiuno-debug ; podman_start_kroki
  ;; clojure -M:usb-port:kaocha-cloverage:test/run
  ;; watch (but then coverage is not possible)
  ;; clojure -M:usb-port:kaocha-cloverage:test/watch
  :kaocha-cloverage {:extra-paths ["test-resources"]
                     :extra-deps {lambdaisland/kaocha-cloverage {:mvn/version "1.1.89"}}}

  ;; clj -M:quickdoc
  :quickdoc
  {:deps {org.babashka/cli {:mvn/version "0.4.36"}
          io.github.borkdude/quickdoc
          {:deps/root "jvm"
           :git/sha "7c8bef54eda28367193ec433af01bb940114f012"}}
   :main-opts ["-m" "babashka.cli.exec" "quickdoc.api" "quickdoc"]}}}